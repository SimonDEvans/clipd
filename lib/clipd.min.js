!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.clipd=t():e.clipd=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e.nodeType!==window.Node.ELEMENT_NODE&&"string"!=typeof e)throw new Error("clipd requires a valid target");if(!document.execCommand)throw new Error("clipd requires the document.execCommand method");var n="string"==typeof e?document.querySelector(e):e,o=function(e){var o=document.createRange(),r=window.getSelection();"A"===n.tagName&&e.preventDefault(),o.selectNode(n),r.rangeCount>0&&r.removeAllRanges(),r.addRange(o);var c=document.execCommand("copy");t.callback&&t.callback(c)};n.addEventListener(t.event||"click",o)},e.exports=t.default}])});
//# sourceMappingURL=clipd.min.js.map